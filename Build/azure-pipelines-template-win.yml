jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stable:
        rustup_toolchain: stable
      beta:
        rustup_toolchain: beta
      nightly:
        rustup_toolchain: nightly
  steps:
  # Test Libconnect6
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      set PATH=%PATH%;%USERPROFILE%\.cargo\bin
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Install rust (windows)
  - script: |
      rustc -Vv
      cargo -V
    displayName: Query rust and cargo versions
  # - script: cargo install -f cargo-make
  #   displayName: Install cargo-make
  # - script: |
  #     pushd Connect6
  #     cargo make workspace-ci-flow --no-workspace
  #     popd
  #   env: { CARGO_MAKE_RUN_CODECOV: true }
  #   displayName: Build and run tests
  # Test CppBind
  - script: |
      pushd Connect6
      cargo build --release
      popd
    displayName: Build Release Mode
  # - task: CMake@1
  #   inputs:
  #     workingDirectory: build
  #     cmakeArgs: ..\Connect6\cppbind\test_cppbind -DCMAKE_GENERATOR_PLATFORM=x64
  #   displayName: CMake test_cppbind
  # - task: MSBuild@1
  #   inputs: 
  #     solution: .\build\test_cppbind.sln
  #     platform: x64
  #   displayName: MSBuild test_cppbind
  # - script: .\build\Debug\test_cppbind.exe
  #   displayName: Start test_cppbind
  # Test PyBind
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.5
      architecture: 'x64'
  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: Update pip
  - script: |
      cd Connect6/pybind
      python setup.py build && python setup.py install
    displayName: Install Pyconnect6
  - script: |
      cd Connect6/pybind/test_pybind
      pip install -r requirement.txt
      pytest
    displayName: Start test_pybind
